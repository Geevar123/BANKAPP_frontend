Data Sharing

 html     <==>      ts
(view)           (component)


DATA BINDING
-----------

1. One way Binding
  1.1 Component to view sharing (ts > html)
     1.1.1 String interpollation - to do that we use,      {{}}
     1.1.2 Property binding - to do that we use,           [property]="value"
  
  1.2 View to Component (html > ts) (3 types)
     1.2.1 Event binding - to do that we use,              (event name)="methodname()"
     1.2.2 $event binding - to do that we use,             (event name)="methodname($event)"
     1.2.3 event binding using template rendering method   #variable_name

2. Two way Binding
  2.1 ngModel(technique)  -  FormsModule(a module in ngModel. ie,extra module or 3rd party library):- [(ngModel)]="value"


 Routing In Angular
--------------------
navigateByUrl     is a method of class Router

        Dependency injection - used for data sharing between 2 classes
                             - woks inside constructor
           code is           - accessSpecifier(public/private) variable_name(any name) : class_name(taken from angular > router)

Angular Services
----------------
> to store frequently using datas(redendent datas)
> create new folder at app folder inside src
> open terminal from that folder
> command: ng g s data

Angular Dierectives
-------------------
structure dierective - can apply datas directly from array
                     - ngFor : uses instead of for loop

Form validation in angular
--------------------------

1. Template Driven Form - first html form then apply validation
2. Model Driven Form - a model create for form in ts then apply validation methods.


> we use Model Driven Form-
    > Module used for model form creation is  - 'ReactiveFormsModule'
    > class in ReactiveFormsModule for Model Form creation - 'FormBuilder'

    Model Form contains..
        > form group
        > array
        > controller

--can access the output of input attribute

   > this.registerForm.get('uname')?.errors

   (either) match with rule    --  empty  
   (or)     not match          --  content